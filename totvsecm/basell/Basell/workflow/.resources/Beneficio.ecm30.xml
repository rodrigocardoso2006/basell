<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>Beneficio</processId>
    </processDefinitionPK>
    <processDescription>Beneficio</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId></categoryId>
    <managerEngineAllocationId></managerEngineAllocationId>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Beneficio</processId>
      <version>1</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>0</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>150</positionX>
      <positionY>82</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>5</sequence>
      </processStatePK>
      <stateName>Act1</stateName>
      <stateDescription>Act1</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>260</positionX>
      <positionY>208</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>9</sequence>
      </processStatePK>
      <stateName>End</stateName>
      <stateDescription>End</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>409</positionX>
      <positionY>249</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list/>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <linkSequence>6</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>5</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <linkSequence>10</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>5</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>retornoItens</eventId>
        <processId>Beneficio</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function retornoItens(PROCESSO){&#xd;
	var DATASET = DatasetBuilder.newDataset();&#xd;
	DATASET.addColumn(&quot;beneficio&quot;);&#xd;
	DATASET.addColumn(&quot;valor&quot;);&#xd;
	DATASET.addColumn(&quot;mes&quot;);&#xd;
	&#xd;
	var MAPA = new java.util.HashMap();&#xd;
	MAPA = hAPI.getCardData(parseInt(PROCESSO));&#xd;
	var IT = MAPA.keySet().iterator();&#xd;
	var INDICE_ITEM = 0;&#xd;
	&#xd;
	var BENEFICIO = new java.util.HashMap();&#xd;
	var VALOR = new java.util.HashMap();&#xd;
	var MES = new java.util.HashMap();&#xd;
	&#xd;
	while (IT.hasNext()) {&#xd;
		var ID = IT.next();&#xd;
&#xd;
log.info(&quot;ITENS:&quot; + ID);&#xd;
		&#xd;
		if (ID.match(/nomeBeneficio___/)) {&#xd;
			log.info(&quot;IT MAPA:&quot; + ID + &quot;:&quot; + ID.substring(16) + &quot;:&quot; + MAPA.get(ID));&#xd;
			BENEFICIO.put(ID.substring(16), MAPA.get(ID));&#xd;
			try {&#xd;
				if (parseInt(ID.substring(16)) &gt; INDICE_ITEM)&#xd;
					INDICE_ITEM = parseInt(ID.substring(16));&#xd;
			}&#xd;
			catch(e) {&#xd;
				log.info(&quot;Nao foi possivel formatar os itens da solicitacao! &quot; + e.message);&#xd;
			}&#xd;
		}&#xd;
		else if(ID.match(/valorReembolso___/)) {&#xd;
			log.info(&quot;IT MAPA:&quot; + ID + &quot;:&quot; + ID.substring(17) + &quot;:&quot; + MAPA.get(ID));&#xd;
			VALOR.put(ID.substring(17),MAPA.get(ID));&#xd;
		}&#xd;
		else if(ID.match(/mesCompetencia___/)) {&#xd;
			log.info(&quot;IT MAPA:&quot; + ID + &quot;:&quot; + ID.substring(17) + &quot;:&quot; + MAPA.get(ID));&#xd;
			MES.put(ID.substring(17),MAPA.get(ID));&#xd;
		}&#xd;
	}&#xd;
	&#xd;
	for (var i = 0; i &lt;= INDICE_ITEM; i++) {&#xd;
		if (BENEFICIO.containsKey(i.toString())) {&#xd;
			log.info(&quot;ITEM: &quot; + BENEFICIO.get(i.toString()));&#xd;
			&#xd;
			var b = new java.lang.String(BENEFICIO.get(i.toString()));&#xd;
			var v = new java.lang.String(VALOR.get(i.toString()));&#xd;
			var m = new java.lang.String(MES.get(i.toString()));&#xd;
				&#xd;
			log.info(&quot;V:&quot; + b + &quot;:&quot; + v + &quot;:&quot; + m);&#xd;
				&#xd;
				DATASET.addRow(new Array(&#xd;
					b,&#xd;
					v,&#xd;
					m&#xd;
				));&#xd;
		}&#xd;
	}&#xd;
&#xd;
	log.info(&quot;Retornou Itens&quot;);&#xd;
	return DATASET;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeStateEntry</eventId>
        <processId>Beneficio</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeStateEntry(sequenceId){&#xd;
&#xd;
	log.info(&quot; beforeStateEntry:&quot; + sequenceId);&#xd;
	&#xd;
	if (sequenceId == 3) {&#xd;
		var user = hAPI.getCardValue(&quot;matricula&quot;);&#xd;
		var lista = hAPI.getCardValue(&quot;listaBeneficio&quot;);&#xd;
		var saldo = hAPI.getCardValue(&quot;saldoBeneficio&quot;);&#xd;
		&#xd;
		lista = lista.split(&quot;,&quot;);&#xd;
		saldo = saldo.split(&quot;,&quot;);&#xd;
		&#xd;
		var service = ServiceManager.getServiceInstance(&quot;Basell&quot;);&#xd;
		var locator = service.instantiate(&quot;br.com.basell.BasellServiceServiceLocator&quot;);&#xd;
		var soap = locator.getBasellServicePort();&#xd;
&#xd;
		for (var i=0;i&lt;lista.length;i++) {&#xd;
			log.info(&quot;lista[i]:&quot; + lista[i]);&#xd;
			var nome = new String(lista[i]);&#xd;
			nome = nome.split(&quot;\|&quot;);&#xd;
			log.info(&quot;nome[0]:&quot; + nome[0] + &quot;:&quot; + nome[1]);&#xd;
			var s = parseFloat(saldo[i]);&#xd;
			&#xd;
			soap.adicionaSaldo(user, nome[0], nome[1], s);		&#xd;
		}&#xd;
	}&#xd;
		&#xd;
	log.info(&quot;AFTER:&quot; + sequenceId);&#xd;
	&#xd;
	if (sequenceId == 4) {&#xd;
&#xd;
		try{ &#xd;
			var parametros = new java.util.HashMap();&#xd;
			&#xd;
			var itens = retornoItens(getValue(&quot;WKNumProces&quot;));&#xd;
&#xd;
			log.info(&quot;AFTER:&quot; + getValue(&quot;WKNumProces&quot;));&#xd;
			log.info(&quot;AFTER:&quot; + itens);&#xd;
			log.info(&quot;AFTER:&quot; + itens.rowsCount);&#xd;
			&#xd;
			parametros.put(&quot;NUMERO_PROCESSO&quot;, getValue(&quot;WKNumProces&quot;));&#xd;
			&#xd;
			var html = &quot;&quot;;&#xd;
			for (var i=0;i&lt;itens.rowsCount;i++) {&#xd;
				html += &quot;Beneficio:&lt;b&gt;&quot; + itens.getValue(i, &quot;beneficio&quot;) + &quot;&lt;/b&gt;&lt;br&gt;&quot;;&#xd;
				html += &quot;Valor:&lt;b&gt;&quot; + itens.getValue(i, &quot;valor&quot;) + &quot;&lt;/b&gt;&lt;br&gt;&quot;;&#xd;
				html += &quot;Mes referencia:&lt;b&gt;&quot; + itens.getValue(i, &quot;mes&quot;) + &quot;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;;&#xd;
			}&#xd;
			parametros.put(&quot;HTML&quot;, html);&#xd;
&#xd;
			parametros.put(&quot;subject&quot;, &quot;Aprovacao reembolso de beneficios&quot;);&#xd;
			&#xd;
			var destinatarios = new java.util.ArrayList();&#xd;
			destinatarios.add(hAPI.getCardValue(&quot;matricula&quot;)); &#xd;
&#xd;
			notifier.notify(&quot;adm&quot;, &quot;rhBeneficio&quot;, parametros, destinatarios, &quot;text/html&quot;); &#xd;
		} catch(e) { &#xd;
			log.info(&quot;ERROR&quot;);&#xd;
			log.info(e); &#xd;
		}	&#xd;
	}&#xd;
&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>290</height>
      <width>831</width>
      <positionX>10</positionX>
      <positionY>10</positionY>
      <stateName>Pool</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>9F9F9F</color>
      <height>145</height>
      <width>801</width>
      <positionX>40</positionX>
      <positionY>10</positionY>
      <stateName>Reporter</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>C0C0C0</color>
      <height>145</height>
      <width>801</width>
      <positionX>40</positionX>
      <positionY>155</positionY>
      <stateName>Assignee</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>210</positionX>
      <positionY>20</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <componGrafSequence>7</componGrafSequence>
      </processComponGrafPK>
      <stateName>Start</stateName>
    </ProcessComponGraf>
  </list>
  <list>
    <ProcessLinkAssoc>
      <processLinkAssocPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <linkSequence>8</linkSequence>
      </processLinkAssocPK>
      <initialStateSequence>7</initialStateSequence>
      <finalStateSequence>4</finalStateSequence>
    </ProcessLinkAssoc>
  </list>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <linkSequence>6</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>167</positionX>
      <positionY>235</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>Beneficio</processId>
        <version>1</version>
        <linkSequence>8</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>167</positionX>
      <positionY>48</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list/>
  <list/>
</list>